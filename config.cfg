[TESTBED_V0]
# user controlled variables
# user can send only certain actons they want to control : list[str]
# the rest will be controlled internally
user_actions = ['TSupSetHea']

# user can decide to see only these variables as  observation : list[str]
user_observations = ['weaBus.TDryBul', # dry bulb temperature
					  'weaBus.relHum', # relative humidity
					  'weaBus.HGloHor', # global horz irradiation
					  'TSup.T']# ahu final air temperature
					  

# observation variables : list[str]
observed_variables = ['weaBus.TDryBul',
					  'weaBus.relHum',
					  'weaBus.HGloHor',
					  'TSup.T']

# action variables : list[str]
action_variables = ['TSupSetHea']

# upper and lower bounds for the observation space : list[list]
observation_space_bounds = [[250.0,   0.0,   0.00, 260.0],
							[310.0, 100.0, 975.23, 310.0]
							]

# upper and lower bounds for the action space : list[list]
action_space_bounds = [[-2.0],
						[2.0]
					]

# time delta in seconds to advance simulation for every step : float
step_size = 3600.0

# path to fmu relative to the repo : str
fmu = './fmu_models/Buildings_Examples_VAVReheat_testbed_v0.fmu'

# file containting all possible variable names in json format
fmu_vars_path = './resource/testbed_v0_variable_explanation.json'

# initialize start time and global end time
fmu_start_time_step = 1820.0
global_fmu_end_time_step = 8760.0

# initial_stpt_vals
initial_stpt_vals = [285.0]
# stpt_vals lower bound
stpt_vals_lb = [280.0]
# stpt_vals upper bound
stpt_vals_ub = [310.0]

# log location
logs = './logs.txt'

# weighting reward components
r_energy_wt = 1.0
r_comfort_wt = 1.0

# energy bounds 'res.PFan', 'res.PHea', 'res.PCooSen', 'res.PCooLat'
energy_lb = [0.0,                         0.0,  -995.4521374499, 			  0.0]
energy_ub = [9157.5974344303,88264.7879730007,151292.7851531413, 71058.8484334497]

[TESTBED_V1]
# user controlled variables
# user can send only certain actons they want to control : list[str]
# the rest will be controlled internally
user_actions = ['NorTRooSetCoo',
				'TSupSetHea',
				'SouTRooSetHea']

# user can decide to see only these variables as  observation : list[str]
user_observations = ['weaBus.TDryBul', # dry bulb temperature
					  'weaBus.relHum', # relative humidity
					  'weaBus.HGloHor', # global horz irradiation
					  'TSup.T',# ahu final air temperature
					  'TRooAir.y5[1]',# cor
					  'TRooAir.y3[1]',# nor
					  'TRooAir.y1[1]',# sou
					  'TRooAir.y2[1]',# eas
					  'TRooAir.y4[1]']# wes


# observation variables : list[str]
observed_variables = ['weaBus.TDryBul', # dry bulb temperature
					  'weaBus.relHum', # relative humidity
					  'weaBus.HGloHor', # global horz irradiation
					  'TSup.T',# ahu final air temperature
					  'TRooAir.y5[1]',# cor
					  'TRooAir.y3[1]',# nor
					  'TRooAir.y1[1]',# sou
					  'TRooAir.y2[1]',# eas
					  'TRooAir.y4[1]']# wes

# action variables : list[str]
action_variables = ['TSupSetHea',
					'CorTRooSetCoo',
					'CorTRooSetHea',
					'NorTRooSetCoo',
					'NorTRooSetHea',
					'SouTRooSetCoo',
					'SouTRooSetHea',
					'EasTRooSetCoo',
					'EasTRooSetHea',
					'WesTRooSetCoo',
					'WesTRooSetHea']

# upper and lower bounds for the observation space : list[list]
observation_space_bounds = [
							[250.0,   0.0,    0.00, 273.0, 273.0, 273.0, 273.0, 273.0, 273.0],
							[320.0, 100.0, 1200.00, 320.0, 320.0, 320.0, 320.0, 320.0, 320.0]
							]

# upper and lower bounds for the action space : list[list]
action_space_bounds = [
						[-2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0],
						[ 2.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0]
					]

# time delta in seconds to advance simulation for every step : float
step_size = 3600.0

# path to fmu relative to the repo : str
fmu = './fmu_models/Buildings_Examples_VAVReheat_testbed_v1.fmu'

# file containting all possible variable names in json format
fmu_vars_path = './resource/testbed_v1_variable_explanation.json'

# initialize start time and global end time end_time_step determines episode length
fmu_start_time_step = 1827.0 
# error time stamps are at 
# 1825,
# 6099-happens with at most 6072 not with 6080 onwards why??

global_fmu_end_time_step = 8760.0

# initial_stpt_vals
initial_stpt_vals = [285.0, 303.15, 285.15, 303.15, 285.15, 303.15, 285.15, 303.15, 285.15, 303.15, 285.15]
# stpt_vals lower bound
stpt_vals_lb =      [280.0, 290.00, 280.00, 290.00, 280.00, 290.00, 280.00, 290.00, 280.00, 290.00, 280.00]
# stpt_vals upper bound
stpt_vals_ub =      [310.0, 310.00, 305.00, 305.00, 305.00, 300.00, 305.00, 300.00, 305.00, 310.00, 305.00]
# chosen based on off condition values from the lbnl pages

# log location
logs = './logs.txt'

# weighting reward components
r_energy_wt = 1.0
r_comfort_wt = 1.0

# energy bounds 'res.PFan', 'res.PHea', 'res.PCooSen', 'res.PCooLat'
energy_lb = [0.0,                         0.0,  -995.4521374499, 			  0.0]
energy_ub = [9157.5974344303,88264.7879730007,151292.7851531413, 71058.8484334497]

[TESTBED_V3]
# user controlled variables
# user can send only certain actons they want to control : list[str]
# the rest will be controlled internally
user_actions = ['NorTRooSetCoo',
				'TSupSetHea',
				'SouTRooSetHea']

# user can decide to see only these variables as  observation : list[str]
user_observations = ['weaBus.TDryBul', # dry bulb temperature
					  'weaBus.relHum', # relative humidity
					  'weaBus.HGloHor', # global horz irradiation
					  'TSup.T',# ahu final air temperature
					  'TRooAir.y5[1]',# cor
					  'TRooAir.y3[1]',# nor
					  'TRooAir.y1[1]',# sou
					  'TRooAir.y2[1]',# eas
					  'TRooAir.y4[1]']# wes

# Do not change !
# observation variables : list[str]
observed_variables = ['weaBus.TDryBul', # dry bulb temperature
					  'weaBus.relHum', # relative humidity
					  'weaBus.HGloHor', # global horz irradiation
					  'TSup.T',# ahu final air temperature
					  'TRooAir.y5[1]',# cor
					  'TRooAir.y3[1]',# nor
					  'TRooAir.y1[1]',# sou
					  'TRooAir.y2[1]',# eas
					  'TRooAir.y4[1]']# wes
# Do not change !
# action variables : list[str]
action_variables = ['TSupSetHea',
					'CorTRooSetCoo',
					'CorTRooSetHea',
					'NorTRooSetCoo',
					'NorTRooSetHea',
					'SouTRooSetCoo',
					'SouTRooSetHea',
					'EasTRooSetCoo',
					'EasTRooSetHea',
					'WesTRooSetCoo',
					'WesTRooSetHea']

# Do not change !
# upper and lower bounds for the observation space : list[list]
observation_space_bounds = [
							[250.0,   0.0,    0.00, 273.0, 273.0, 273.0, 273.0, 273.0, 273.0],
							[320.0, 100.0, 1200.00, 320.0, 320.0, 320.0, 320.0, 320.0, 320.0]
							]

# Do not change !
# upper and lower bounds for the action space : list[list]
action_space_bounds = [
						[-2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0],
						[ 2.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0]
					]

# Do not change !
# time delta in seconds to advance simulation for every step : float
step_size = 3600.0

# Do not change !
# path to fmu relative to the repo : str
fmu = './fmu_models/Buildings_Examples_VAVReheat_testbed_v3.fmu'

# Do not change !
# file containting all possible variable names in json format
fmu_vars_path = './resource/testbed_v3_variable_explanation.json'


# initialize start time and global end time end_time_step determines episode length
fmu_start_time_step = 1827.0 
# error time stamps are at 
# 1825,
# 6099-happens with at most 6072 not with 6080 onwards why??

global_fmu_end_time_step = 8760.0

# Do not change !
# initial_stpt_vals
initial_stpt_vals = [285.0, 303.15, 285.15, 303.15, 285.15, 303.15, 285.15, 303.15, 285.15, 303.15, 285.15]
# Do not change !
# stpt_vals lower bound
stpt_vals_lb =      [280.0, 290.00, 280.00, 290.00, 280.00, 290.00, 280.00, 290.00, 280.00, 290.00, 280.00]
# Do not change !
# stpt_vals upper bound
stpt_vals_ub =      [310.0, 310.00, 305.00, 305.00, 305.00, 300.00, 305.00, 300.00, 305.00, 310.00, 305.00]
# chosen based on off condition values from the lbnl pages

# log location
logs = './logs.txt'

# weighting reward components
r_energy_wt = 1.0
r_comfort_wt = 1.0

# Do not change !
# energy bounds 'res.PHea', 'res.PCooSen', 'res.PCooLat'
energy_lb = [             0.0,  -995.4521374499, 			  0.0]
energy_ub = [88264.7879730007,151292.7851531413, 71058.8484334497]